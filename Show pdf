// FileUpload.jsx
import React, { useState } from 'react';
import uploadIcon from '../assets/upload-icon.png';
import './FileUpload.css';

const FileUpload = ({ name, onFileChange }) => {
  const [file, setFile] = useState(null);

  const handleFileChange = (event) => {
    const selectedFile = event.target.files[0];
    if (selectedFile) {
      if (selectedFile.type === "application/pdf" || selectedFile.type === "text/csv") {
        setFile(selectedFile);
        onFileChange(selectedFile); // Notify parent component of file change
      } else {
        alert("Please select a PDF or CSV file.");
        event.target.value = null;
        setFile(null);
      }
    }
  };

  const handleRemoveFile = () => {
    setFile(null);
    onFileChange(null); // Notify parent component of file removal
    document.getElementById(`${name}-file-input`).value = null; // Clear the file input
  };

  return (
    <div className="file-upload">
      <label htmlFor={`${name}-file-input`} className="file-label">
        <h3>{name}</h3>
        <div className="file-input-container">
          <img src={uploadIcon} alt="Upload Icon" className="upload-icon" />
          <span className="file-input-overlay">
            {file ? (
              <div className="file-details">
                <span>{file.name}</span>
                <button className="remove-file-button" onClick={handleRemoveFile}>X</button>
              </div>
            ) : (
              <>
                Drag & Drop or <span className="browse">Browse</span>
              </>
            )}
          </span>
          <input
            type="file"
            id={`${name}-file-input`}
            className="file-input"
            accept=".pdf,.csv"
            onChange={handleFileChange}
          />
          <p className="file-support">Supports: PDF, CSV</p>
        </div>
      </label>
    </div>
  );
};

export default FileUpload;
