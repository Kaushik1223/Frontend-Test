// ResultModal.jsx
import React from 'react';

const ResultModal = ({ isOpen, onClose, resultData }) => {
  if (!isOpen) return null;

  const handleExport = () => {
    const element = document.createElement("a");
    const file = new Blob([resultData], { type: 'text/plain' });
    element.href = URL.createObjectURL(file);
    element.download = "result.txt";
    document.body.appendChild(element);
    element.click();
  };

  return (
    <div className="modal">
      <div className="modal-content">
        <h2>Results</h2>
        <p>{resultData}</p>
        <div className="modal-actions">
          <button onClick={handleExport}>Export</button>
          <button onClick={onClose}>Close</button>
        </div>
      </div>
    </div>
  );
};

export default ResultModal;

#--------------------------

/* ResultModal.css */
.modal {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.5);
  display: flex;
  justify-content: center;
  align-items: center;
}

.modal-content {
  background: white;
  padding: 20px;
  border-radius: 5px;
  width: 500px;
  max-width: 90%;
}

.modal-actions {
  display: flex;
  justify-content: space-between;
  margin-top: 20px;
}

button {
  padding: 10px 20px;
  border: none;
  background-color: #007bff;
  color: white;
  cursor: pointer;
  border-radius: 5px;
}

button:hover {
  background-color: #0056b3;
}

#_-------------_----------------

// App.jsx
import React, { useState } from 'react';
import Navbar from './components/Navbar';
import FileUpload from './components/FileUpload';
import ReconcileButton from './components/ReconcileButton';
import Footer from './components/Footer';
import TextContainer from './components/TextContainer';
import ShowResultButton from './components/ShowResultButton';
import LogOffModal from './components/LogOffModal';
import ProgressBar from './components/ProgressBar';
import ResultModal from './components/ResultModal';
import './App.css';

function App() {
  const [isLogOffModalOpen, setIsLogOffModalOpen] = useState(false);
  const [progress, setProgress] = useState(0);
  const [isResultModalOpen, setIsResultModalOpen] = useState(false);
  const [resultData, setResultData] = useState("Reconciliation Data will be displayed here...");

  const handleLogOff = () => {
    setIsLogOffModalOpen(true);
  };

  const handleSignIn = () => {
    setIsLogOffModalOpen(false);
  };

  const handleReconcile = () => {
    setProgress(0); // Reset progress
    let progressValue = 0;
    const interval = setInterval(() => {
      progressValue += 10;
      if (progressValue <= 100) {
        setProgress(progressValue);
      } else {
        clearInterval(interval);
      }
    }, 500); // Adjust this interval and increment as needed
  };

  const handleShowResult = () => {
    setIsResultModalOpen(true);
  };

  const handleCloseResult = () => {
    setIsResultModalOpen(false);
  };

  return (
    <div className="App">
      <Navbar onLogOff={handleLogOff} />
      <LogOffModal isOpen={isLogOffModalOpen} onClose={handleSignIn} />
      <TextContainer />
      <main className="main-content">
        <div className="upload">
          <FileUpload name="Upload Invoice" />
          <FileUpload name="Upload Confirmations" />
        </div>
        <ReconcileButton onClick={handleReconcile} />
        {progress > 0 && <ProgressBar progress={progress} />}
      </main>
      <div className='result-wrapper'>
        <ShowResultButton onClick={handleShowResult} />
      </div>
      <Footer />
      <ResultModal 
        isOpen={isResultModalOpen} 
        onClose={handleCloseResult} 
        resultData={resultData}
      />
    </div>
  );
}

export default App;
