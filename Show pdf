// Modal.jsx
import React from 'react';
import './Modal.css'; // Create a CSS file for styling

const Modal = ({ show, onClose, message }) => {
  if (!show) return null;

  return (
    <div className="modal-overlay">
      <div className="modal-content">
        <h2>Result</h2>
        <p>{message}</p>
        <button onClick={onClose} className="close-button">Close</button>
      </div>
    </div>
  );
};

export default Modal;

#--------------------------

/* Modal.css */
.modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5);
  display: flex;
  justify-content: center;
  align-items: center;
}

.modal-content {
  background: white;
  padding: 20px;
  border-radius: 8px;
  width: 400px;
  max-width: 80%;
  text-align: center;
}

.close-button {
  margin-top: 20px;
  padding: 10px 20px;
  background-color: #007bff;
  border: none;
  border-radius: 4px;
  color: white;
  cursor: pointer;
}

#---------------------++-+-

// App.jsx
import React, { useState } from 'react';
import axios from 'axios';
import Navbar from './Navbar'; // Assuming you have a Navbar component
import FileUpload from './FileUpload';
import Modal from './Modal';
import './App.css'; // Assuming you have some basic CSS for your app

const App = () => {
  const [showModal, setShowModal] = useState(false);
  const [message, setMessage] = useState('');
  const [file, setFile] = useState(null);

  const handleFileChange = (selectedFile) => {
    setFile(selectedFile);
  };

  const handleShowResult = async () => {
    try {
      const response = await axios.get('http://localhost:5000/result');
      setMessage(response.data);
      setShowModal(true);
    } catch (error) {
      console.error('Error fetching message:', error);
    }
  };

  const handleReconcile = async () => {
    if (!file) {
      alert('Please upload a file first.');
      return;
    }

    const formData = new FormData();
    formData.append('file', file);

    try {
      const response = await axios.post('http://localhost:5000/upload', formData, {
        headers: {
          'Content-Type': 'multipart/form-data',
        },
      });
      console.log('File uploaded successfully:', response.data);
      // Optionally, handle the response data
    } catch (error) {
      console.error('There was an error uploading the file:', error);
    }
  };

  const closeModal = () => setShowModal(false);

  return (
    <div className="app">
      <Navbar />
      <div className="main-content">
        <h2>CNF Trade Reconciliation</h2>
        <hr style={{ borderColor: 'yellow' }} />
        <div className="file-upload-section">
          <FileUpload name="Upload Files" onFileChange={handleFileChange} />
        </div>
        <div className="button-section">
          <button onClick={handleReconcile} className="reconcile-button">
            Reconcile
          </button>
          <button onClick={handleShowResult} className="show-result-button">
            Show Result
          </button>
        </div>
      </div>
      <Modal show={showModal} onClose={closeModal} message={message} />
      <footer>
        &copy; 2024 Wells Fargo
      </footer>
    </div>
  );
};

export default App;

#-----------------------------

// server.js (Node.js backend)
const express = require('express');
const app = express();
const PORT = process.env.PORT || 5000;

app.get('/result', (req, res) => {
  res.send('Hello from the backend!');
});

app.listen(PORT, () => {
  console.log(`Server is running on port ${PORT}`);
});
