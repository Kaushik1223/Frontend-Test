import React from 'react';

const Modal = ({ show, onClose, message }) => {
  if (!show) return null;

  const handleExport = () => {
    const element = document.createElement("a");
    const file = new Blob([message], { type: 'text/plain' });
    element.href = URL.createObjectURL(file);
    element.download = "result.txt";
    document.body.appendChild(element); // Required for this to work in Firefox
    element.click();
  };

  return (
    <div className="modal-overlay">
      <div className="modal-content">
        <h2>Result</h2>
        <p>{message}</p>
        <div className="modal-buttons">
          <button onClick={handleExport} className="export-button">Export to .txt</button>
          <button onClick={onClose} className="close-button">Close</button>
        </div>
      </div>
    </div>
  );
};

export default Modal;
---------------------------

import React, { useState } from 'react';
import Navbar from './components/Navbar';
import FileUpload from './components/FileUpload';
import ReconcileButton from './components/ReconcileButton';
import Footer from './components/Footer';
import TextContainer from './components/TextContainer';
import ShowResultButton from './components/ShowResultButton';
import Modal from './components/Modal';
import './App.css';

function App() {
  const [isShowResultModalOpen, setIsShowResultModalOpen] = useState(false);
  const [resultContent, setResultContent] = useState("Reconciliation result goes here..."); // Placeholder content

  const handleShowResult = () => {
    setIsShowResultModalOpen(true);
  };

  const handleCloseModal = () => {
    setIsShowResultModalOpen(false);
  };

  return (
    <div className="App">
      <Navbar />
      <TextContainer />
      <main className="main-content">
        <div className="upload">
          <FileUpload name="Upload Invoice" />
          <FileUpload name="Upload Confirmations" />
        </div>
        <ReconcileButton />
        <ShowResultButton onClick={handleShowResult} />
      </main>
      <Modal show={isShowResultModalOpen} onClose={handleCloseModal} message={resultContent} />
      <Footer />
    </div>
  );
}

export default App;
