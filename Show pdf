const handleClick = async () => {
  setEvents([]);
  setProgress(0);

  if (!files.Upload_Invoice || !files.Upload_Confirmation) {
    alert("Please select both files before reconciling");
    return;
  }

  console.log("Btn clicked");

  const formData = new FormData();
  for (const [key, value] of Object.entries(files)) {
    console.log('key ' + key + ' value ', value);
    if (value) {
      formData.append(key, value);
    }
  }

  try {
    const response = await fetch(`${config.apiBaseUrl}${config.routes.uploader}`, {
      method: "POST",
      body: formData,
    });

    const result = await response.json();
    alert("Files Upload Successful !");
    setDisabled(true);
    setIsCancelVisible(true);

    // Start listening to the server-sent events
    const eventSource = new EventSource(`${config.apiBaseUrl}${config.routes.start_seq}`);
    eventSourceRef.current = eventSource;

    eventSource.onmessage = function (event) {
      const newEvent = JSON.parse(event.data);
      setEvents((prevEvents) => [...prevEvents, newEvent]);

      if (newEvent.progress !== undefined) {
        setProgress(newEvent.progress);

        // Hide the cancel button when progress reaches 100%
        if (newEvent.progress === 100) {
          setIsCancelVisible(false);
          eventSource.close();
        }
      }
    };

    eventSource.onerror = function () {
      eventSource.close();
      eventSourceRef.current = null;
    };
  } catch (error) {
    alert("Error uploading files:", error);
  }
};
