import React, { useState } from 'react';
import uploadIcon from '../assets/upload-icon.png'; // Adjust the path according to your project structure

const FileUpload = ({ name, onFileSelect }) => {
  const [selectedFile, setSelectedFile] = useState(null);

  const handleFileChange = (event) => {
    const file = event.target.files[0];
    if (file && file.type === 'application/pdf') {
      setSelectedFile(file);
      onFileSelect(file);
    } else {
      alert('Only PDF files are allowed.');
    }
  };

  const removeFile = () => {
    setSelectedFile(null);
    onFileSelect(null);
  };

  return (
    <div className="file-upload">
      <label htmlFor={`file-input-${name}`} className="file-label">
        <h3>{name}</h3>
        <div className="file-input-container">
          <img src={uploadIcon} alt="Upload Icon" className="upload-icon" />
          <span className="file-input-overlay">
            Drag & Drop or <span className="browse">Browse</span>
          </span>
          <input
            type="file"
            id={`file-input-${name}`}
            className="file-input"
            accept="application/pdf"
            onChange={handleFileChange}
          />
          <p className="file-support">Supports: PDF only</p>
        </div>
      </label>
      {selectedFile && (
        <div className="selected-file">
          <h4>Selected File:</h4>
          <ul>
            <li>{selectedFile.name} <button onClick={removeFile}>Remove</button></li>
          </ul>
        </div>
      )}
    </div>
  );
};

export default FileUpload;

#-------------------------------

.file-upload {
  margin: 20px;
}

.file-label {
  display: block;
  text-align: center;
  margin-bottom: 10px;
}

.file-input-container {
  position: relative;
  border: 2px dashed #ccc;
  padding: 20px;
  cursor: pointer;
}

.upload-icon {
  width: 50px;
  height: 50px;
}

.file-input-overlay {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.file-input {
  opacity: 0;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  width: 100%;
  cursor: pointer;
}

.selected-file {
  margin-top: 10px;
  text-align: left;
}

.selected-file ul {
  list-style-type: none;
  padding: 0;
  margin: 0;
}

.selected-file li {
  background: #f7f7f7;
  padding: 5px;
  border: 1px solid #ccc;
  border-radius: 5px;
  margin-bottom: 5px;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.remove-button {
  background-color: #e74c3c;
  color: white;
  border: none;
  border-radius: 50%;
  padding: 5px 10px;
  cursor: pointer;
  margin-left: 10px;
  font-size: 16px;
  line-height: 1;
}

.remove-button:hover {
  background-color: #c0392b;
}

# -------------------------------

import React, { useState } from 'react';
import Navbar from './components/Navbar';
import TextComponent from './components/TextComponent';
import FileUpload from './components/FileUpload';
import ShowResultButton from './components/ShowResultButton';
import Footer from './components/Footer';
import './App.css';

function App() {
  const [filesToUpload, setFilesToUpload] = useState([]);

  const handleFileSelect = (files) => {
    setFilesToUpload(files);
  };

  const handleShowResult = () => {
    // Logic for handling "Show Result"
    console.log("Show Result button clicked");
  };

  const uploadFilesToServer = () => {
    const formData = new FormData();
    filesToUpload.forEach((file) => {
      formData.append('files', file);
    });

    fetch('http://your-server-url/upload', {
      method: 'POST',
      body: formData,
    })
      .then((response) => response.json())
      .then((data) => {
        console.log('Success:', data);
      })
      .catch((error) => {
        console.error('Error:', error);
      });
  };

  return (
    <div className="App">
      <Navbar />
      <TextComponent />
      <div className="main-container">
        <div className="file-upload-container">
          <div>
            <h3>Upload Invoice</h3>
            <FileUpload onFileSelect={handleFileSelect} />
          </div>
          <div>
            <h3>Upload Confirmations</h3>
            <FileUpload onFileSelect={handleFileSelect} />
          </div>
        </div>
        <button className="reconcile-button" onClick={uploadFilesToServer}>
          Reconcile
        </button>
        <ShowResultButton onClick={handleShowResult} />
      </div>
      <Footer />
    </div>
  );
}

export default App;
