const handleFileChange = (event) => {
    const file = event.target.files[0];

    // Determine supported types based on the fileType prop
    const supportedTypes = fileType === 'pdf'
        ? ['application/pdf']
        : [
            'text/csv',
            'application/vnd.ms-excel', // .xls
            'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', // .xlsx
            'application/vnd.ms-excel.sheet.macroEnabled.12', // .xlsm
            'application/vnd.ms-excel.sheet.binary.macroEnabled.12' // .xlsb
        ];

    const MAX_SIZE_MB = fileType === 'pdf' ? 200 : 1024; // Set max size: 200MB for PDF, 1GB for others

    if (file) {
        const fileSizeMB = file.size / (1024 * 1024); // Convert file size to MB

        if (fileSizeMB > MAX_SIZE_MB) {
            alert(`File size exceeded. Max ${MAX_SIZE_MB}MB allowed.`);
            event.target.value = '';  // Reset the file input
            return;
        }

        if (supportedTypes.includes(file.type)) {
            setSelectedFile(file);
            onFileSelect(value, file);
        } else {
            alert(`Only ${fileType.toUpperCase()} files are allowed.`);
        }
    }
};
