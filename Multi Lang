import React from 'react';
import { PDFDocument } from 'pdf-lib'; // Import pdf-lib

const MergeButton = ({ onFilesMerged, disabled }) => {

  const handleMergeClick = () => {
    document.getElementById('merge-file-input').click();
  };

  const handleMergeFileSelect = async (event) => {
    const files = Array.from(event.target.files).filter(file => file.type === 'application/pdf');

    if (files.length === 0) {
      alert('Please select PDF files to merge.');
      return;
    }

    try {
      const pdfDoc = await PDFDocument.create();

      for (const file of files) {
        const existingPdfBytes = await file.arrayBuffer();
        const existingPdfDoc = await PDFDocument.load(existingPdfBytes);
        const copiedPages = await pdfDoc.copyPages(existingPdfDoc, existingPdfDoc.getPageIndices());
        copiedPages.forEach((page) => pdfDoc.addPage(page));
      }

      const mergedPdfBytes = await pdfDoc.save();
      const mergedBlob = new Blob([mergedPdfBytes], { type: 'application/pdf' });
      const mergedFile = new File([mergedBlob], 'merged.pdf', { type: 'application/pdf' });

      onFilesMerged(mergedFile); // Notify parent component with the merged file

    } catch (error) {
      console.error('Error merging PDFs:', error);
    }
  };

  return (
    <>
      <button onClick={handleMergeClick} className="merge-button" disabled={disabled}>
        Merge PDFs
      </button>
      <input
        type="file"
        id="merge-file-input"
        style={{ display: 'none' }}
        accept="application/pdf"
        multiple
        onChange={handleMergeFileSelect}
      />
    </>
  );
};

export default MergeButton;
