import React, { useState } from 'react';

const TreeNode = ({ node, level = 0 }) => {
  const [expanded, setExpanded] = useState(false);

  const toggleExpand = () => {
    setExpanded(!expanded);
  };

  const renderHeading = (label, value) => (
    <div style={{ marginLeft: `${level * 20}px`, fontWeight: 'bold' }}>
      {label}: {value}
    </div>
  );

  const renderDifferencesTable = (differences) => (
    <table style={{ marginLeft: `${level * 20 + 20}px` }}>
      <thead>
        <tr>
          <th>Excel</th>
          <th>PDF</th>
        </tr>
      </thead>
      <tbody>
        {Object.entries(differences).map(([key, value], index) => (
          <tr key={index}>
            <td>{value.Excel}</td>
            <td>{value.PDF}</td>
          </tr>
        ))}
      </tbody>
    </table>
  );

  return (
    <div className="tree-node">
      {node.Account && renderHeading('Account No', node.Account)}
      {node['Transaction Number'] && renderHeading('Transaction No', node['Transaction Number'])}
      {node.Confirmation && renderHeading('Type of Confirmation', node.Confirmation)}

      <div className="node-label" onClick={toggleExpand}>
        {expanded ? '-' : '+'} {node.Account || node['Transaction Number'] || node.Confirmation || 'Differences'}
      </div>

      {expanded && (
        <div className="node-children">
          {node.Result ? (
            node.Result.map((result, index) => (
              <TreeNode key={index} node={result} level={level + 1} />
            ))
          ) : node.Differences ? (
            <div>
              {renderHeading('Difference', '')}
              {renderDifferencesTable(node.Differences)}
            </div>
          ) : null}
        </div>
      )}
    </div>
  );
};

export default TreeNode;
