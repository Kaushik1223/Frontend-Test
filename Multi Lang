const handleCancel = async () => {
  const userConfirmed = window.confirm("Are you sure you want to cancel the process?");
  if (!userConfirmed) return;

  setIsCancelling(true);
  setLogs(prevLogs => [...prevLogs, "Cancelling..."]);

  // Simulating the cancel process without a backend API for the logs
  setTimeout(() => {
    // Simulate adding the "Cancelled" message to the logs
    setLogs(prevLogs => [...prevLogs, "Cancelled"]);

    // Once the "Cancelled" message is added, reset the UI state
    setProgress(0);
    setIsCancelling(false); // Stop showing "Cancelling..." message
    setIsCancelVisible(false); // Hide the Cancel button
    setDisabled(false); // Enable the Reconcile button
  }, 2000); // 2 seconds delay to simulate processing time

  // Send the cancel request to the backend
  try {
    await fetch(`${config.apiBaseUrl}${config.routes.cancel_seq}`);
  } catch (error) {
    console.error("There was an error cancelling the process!", error);
    // In case of error, reset the UI state
    setIsCancelling(false);
    setIsCancelVisible(false);
    setDisabled(false);
  }
};
