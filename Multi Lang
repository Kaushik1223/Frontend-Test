import React from 'react';
import { PDFDocument } from 'pdf-lib';

const MergeButton = ({ onFileUpload }) => {

  const MAX_SIZE_MB = 200;

  const handleMergeClick = () => {
    document.getElementById('merge-file-input').click();
  };

  const handleMergeFileSelect = async (event) => {
    const files = event.target.files;

    if (files.length < 2) {
      alert("Please select at least two PDF files to merge.");
      return;
    }

    const pdfDoc = await PDFDocument.create();

    for (const file of files) {
      const existingPdfBytes = await file.arrayBuffer();
      const existingPdf = await PDFDocument.load(existingPdfBytes);
      const copiedPages = await pdfDoc.copyPages(existingPdf, existingPdf.getPageIndices());
      copiedPages.forEach((page) => pdfDoc.addPage(page));
    }

    const mergedPdfBytes = await pdfDoc.save();
    const mergedBlob = new Blob([mergedPdfBytes], { type: 'application/pdf' });

    const mergedSizeMB = mergedBlob.size / (1024 * 1024);  // Size in MB

    if (mergedSizeMB > MAX_SIZE_MB) {
      alert(`Size exceeded. Max ${MAX_SIZE_MB}MB allowed.`);
      event.target.value = '';  // Reset the file input
      return;
    }

    const mergedFile = new File([mergedBlob], "merged.pdf", { type: 'application/pdf' });

    // Automatically upload the merged PDF to the "Upload Invoice" section
    onFileUpload('invoice', mergedFile);

    // Reset the input to allow re-selecting files if needed
    event.target.value = '';
  };

  return (
    <div className="merge-section">
      <button onClick={handleMergeClick} className="merge-button">Merge PDFs</button>
      <input
        type="file"
        id="merge-file-input"
        style={{ display: 'none' }}
        accept="application/pdf"
        multiple
        onChange={handleMergeFileSelect}
      />
    </div>
  );
};

export default MergeButton;
