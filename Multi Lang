// csvConfig.js
export const csvConfig = [
  'Account No.',
  'Transaction no.',
  'Type of Confirmation',
  'SOR Column',
  'SOR Data',
  'Invoice data'
];

------------

import { parse } from 'json-2-csv';
import { csvConfig } from './csvConfig'; // Config for column mapping

const handleExportToCSV = () => {
  if (!message || !message.Differences || message.Differences.length === 0) {
    console.log("No message to export!");
    return;
  }

  const dataToConvert = [];

  // Flatten the JSON structure
  message.Differences.forEach(accountData => {
    const accountNo = accountData.Account;

    accountData.Result.forEach(result => {
      const transactionNo = result['Transaction Number'];
      const confirmationType = result.Confirmation;

      Object.keys(result.Differences).forEach(sorColumn => {
        const sorData = result.Differences[sorColumn].Excel;
        const invoiceData = result.Differences[sorColumn].PDF;

        dataToConvert.push({
          'Account No.': accountNo,
          'Transaction no.': transactionNo,
          'Type of Confirmation': confirmationType,
          'SOR Column': sorColumn,
          'SOR Data': sorData,
          'Invoice data': invoiceData
        });
      });
    });
  });

  // Convert JSON to CSV
  parse(dataToConvert, { keys: csvConfig }, (err, csv) => {
    if (err) {
      console.error("Error converting to CSV:", err);
      return;
    }

    // Create a download link
    const element = document.createElement("a");
    const file = new Blob([csv], { type: 'text/csv' });
    element.href = URL.createObjectURL(file);
    element.download = "result.csv";
    document.body.appendChild(element);
    element.click();
  });
};
