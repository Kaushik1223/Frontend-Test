import React, { useState } from 'react';
import uploadIcon from '../assets/upload-icon.png';
import { MdOutlineCancel } from "react-icons/md";
import { useTranslation } from 'react-i18next';

const FileUpload = ({ name, value, onFileSelect, disabled, fileType }) => {
  const [selectedFile, setSelectedFile] = useState(null);
  const { t } = useTranslation();

  const handleFileChange = (event) => {
    const file = event.target.files[0];

    // Determine supported types based on the fileType prop
    const supportedTypes = fileType === 'pdf'
      ? ['application/pdf']
      : [
          'text/csv',
          'application/vnd.ms-excel', // .xls
          'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', // .xlsx
          'application/vnd.ms-excel.sheet.macroEnabled.12', // .xlsm
          'application/vnd.ms-excel.sheet.binary.macroEnabled.12' // .xlsb
        ];

    if (file && supportedTypes.includes(file.type)) {
      setSelectedFile(file);
      onFileSelect(value, file);
    } else {
      alert(`Only ${fileType.toUpperCase()} files are allowed.`);
    }
  };

  const removeFile = () => {
    setSelectedFile(null);
    onFileSelect(value, null);
  };

  return (
    <div className="file-upload">
      <label htmlFor={`file-input-${value}`} className="file-label">
        <h3>{name}</h3>
        <div className="file-input-container">
          <img src={uploadIcon} alt="Upload Icon" className="upload-icon" />
          <span className="file-input-overlay">
            {t('fileUpload.dragDrop')} <span className="browse">{t('fileUpload.browse')}</span>
          </span>
          <input
            type="file"
            id={`file-input-${value}`}
            className="file-input"
            accept={fileType === 'pdf' ? '.pdf' : '.csv, .xls, .xlsx, .xlsm, .xlsb'}
            onChange={handleFileChange}
            disabled={disabled}
          />
          <p className="file-support">{fileType === 'pdf' ? 'Only PDF files are allowed.' : 'Only CSV and Excel files are allowed.'}</p>
        </div>
      </label>
      {selectedFile && (
        <div className="selected-file">
          <h4>Selected File:</h4>
          <ul>
            <li>{selectedFile.name} <button onClick={removeFile} disabled={disabled}><MdOutlineCancel /></button></li>
          </ul>
        </div>
      )}
    </div>
  );
};

export default FileUpload;
